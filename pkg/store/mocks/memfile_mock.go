// Code generated by MockGen. DO NOT EDIT.
// Source: memfile.go

// Package mock_store is a generated GoMock package.
package mock_store

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockImFile is a mock of ImFile interface.
type MockImFile struct {
	ctrl     *gomock.Controller
	recorder *MockImFileMockRecorder
}

// MockImFileMockRecorder is the mock recorder for MockImFile.
type MockImFileMockRecorder struct {
	mock *MockImFile
}

// NewMockImFile creates a new mock instance.
func NewMockImFile(ctrl *gomock.Controller) *MockImFile {
	mock := &MockImFile{ctrl: ctrl}
	mock.recorder = &MockImFileMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImFile) EXPECT() *MockImFileMockRecorder {
	return m.recorder
}

// Bytes mocks base method.
func (m *MockImFile) Bytes() []byte {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Bytes")
	ret0, _ := ret[0].([]byte)
	return ret0
}

// Bytes indicates an expected call of Bytes.
func (mr *MockImFileMockRecorder) Bytes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Bytes", reflect.TypeOf((*MockImFile)(nil).Bytes))
}

// Truncate mocks base method.
func (m *MockImFile) Truncate(n int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Truncate", n)
	ret0, _ := ret[0].(error)
	return ret0
}

// Truncate indicates an expected call of Truncate.
func (mr *MockImFileMockRecorder) Truncate(n interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Truncate", reflect.TypeOf((*MockImFile)(nil).Truncate), n)
}

// WriteAt mocks base method.
func (m *MockImFile) WriteAt(b []byte, offset int64) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteAt", b, offset)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// WriteAt indicates an expected call of WriteAt.
func (mr *MockImFileMockRecorder) WriteAt(b, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteAt", reflect.TypeOf((*MockImFile)(nil).WriteAt), b, offset)
}
